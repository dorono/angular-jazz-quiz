!function(){var JazzQuiz=angular.module("JazzQuiz",["JazzQuiz.services","JazzQuiz.controllers","ngRoute"]);JazzQuiz.config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"/partials/quiz.html",controller:"QuizCtrl",resolve:{questions:function(quizFactory){return quizFactory.getQuestions()},responses:function(quizFactory){return quizFactory.getResponses()}}}).when("/score",{templateUrl:"/partials/score.html",controller:"ScoreCtrl",resolve:{success:function(quizFactory){return quizFactory.getSuccessMessages()}}}),$routeProvider.otherwise({redirectTo:"/#/"})}])}();var ctrl=angular.module("JazzQuiz.controllers",[]);ctrl.controller("QuizCtrl",function($scope,$timeout,$location,quizFactory,questions,responses){$scope.quizContent=questions,$scope.responses=responses,$scope.data={},$scope.valid=null,$scope.displayNextBtn=!1;var numQuestions=quizFactory.countQuestions(),score=0,questArray=quizFactory.randomizeQuestions(),questArrayIndex=0;$scope.questNum=questArray[questArrayIndex],$scope.submitAnswer=function(correctAnswer){$scope.valid=Number($scope.data.submittedAnswer)===correctAnswer,$scope.submitted=!0,$scope.valid?(score++,$scope.feedback=$scope.responses[0].correct):$scope.feedback=$scope.responses[0].incorrect,numQuestions>questArrayIndex+1?$scope.displayNextBtn=!0:$timeout(function(){quizFactory.submitScore(score),$location.path("score")},2e3)},$scope.nextQuestion=function(){questArrayIndex++,$scope.questNum=questArray[questArrayIndex],$scope.submitted=!1,$scope.displayNextBtn=!1,$scope.data={}}}),ctrl.controller("ScoreCtrl",function($scope,quizFactory){$scope.score=quizFactory.getScore(),$scope.summaryData=quizFactory.quizSummary()});var services=angular.module("JazzQuiz.services",[]);services.factory("quizFactory",["$http",function($http){var numberOfQuestions,totalScore,numSuccessMessages,scoreLevel,successMessages,scorePercentage,quizSuccessMessage,questionNumberArray=[];return{getQuestions:function(){return $http.get("../json/questions.json").then(function(result){numberOfQuestions=result.data.length,questionNumberArray.length&&(questionNumberArray=[]);for(var i=0;numberOfQuestions>i;i++)questionNumberArray.push(i);return result.data})},shuffle:function(o){for(var j,x,i=o.length;i;j=Math.floor(Math.random()*i),x=o[--i],o[i]=o[j],o[j]=x);return o},randomizeQuestions:function(){return this.shuffle(questionNumberArray)},getResponses:function(){return $http.get("../json/submissionResponses.json").then(function(result){return result.data})},countQuestions:function(){return numberOfQuestions},getSuccessMessages:function(){return $http.get("../json/successMessages.json").then(function(result){return successMessages=result.data,numSuccessMessages=result.data.length,result.data})},submitScore:function(quizScore){return totalScore=quizScore,quizScore},getScore:function(){return totalScore},quizSummary:function(){if(scorePercentage=Math.floor(Number(totalScore/numberOfQuestions*100)),scoreLevel=Math.floor(Number(100/numSuccessMessages)),0===scorePercentage)quizSuccessMessage=successMessages[0].message;else if(100===scorePercentage)quizSuccessMessage=successMessages[numSuccessMessages-1].message;else{var i;for(i=0;numSuccessMessages>i;i++)if(scoreLevel*(i+1)>scorePercentage){quizSuccessMessage=successMessages[i-1].message;break}}return{scorePercentage:scorePercentage,quizSuccessMessage:quizSuccessMessage}}}}]);